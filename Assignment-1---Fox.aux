\relax 
\providecommand*\new@tpo@label[2]{}
\providecommand\hyper@newdestlabel[2]{}
\providecommand*\HyPL@Entry[1]{}
\HyPL@Entry{0<</S/D>>}
\@writefile{toc}{\contentsline {subsubsection}{\nonumberline 1. Task: Create a simple shape (like a square or triangle) using point plots in R. Implement R code to apply different transformations (scaling, rotation, reflection) to the shape by left multiplying a transformation matrix by each of the point vectors. Demonstrate these transformations through animated plots.}{1}{subsubsection*.2}\protected@file@percent }
\newlabel{task-create-a-simple-shape-like-a-square-or-triangle-using-point-plots-in-r.-implement-r-code-to-apply-different-transformations-scaling-rotation-reflection-to-the-shape-by-left-multiplying-a-transformation-matrix-by-each-of-the-point-vectors.-demonstrate-these-transformations-through-animated-plots.}{{}{1}{1. Task: Create a simple shape (like a square or triangle) using point plots in R. Implement R code to apply different transformations (scaling, rotation, reflection) to the shape by left multiplying a transformation matrix by each of the point vectors. Demonstrate these transformations through animated plots}{subsubsection*.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{\nonumberline 2. Proofs \& SVD Example}{7}{subsubsection*.4}\protected@file@percent }
\newlabel{proofs-svd-example}{{}{7}{2. Proofs \& SVD Example}{subsubsection*.4}{}}
\@writefile{toc}{\contentsline {paragraph}{\nonumberline A. Prove that \(A \times B \neq B \times A\)}{7}{paragraph*.6}\protected@file@percent }
\newlabel{a.-prove-that-a-times-b-neq-b-times-a}{{}{7}{\texorpdfstring {A. Prove that \(A \times B \neq B \times A\)}{A. Prove that A \textbackslash times B \textbackslash neq B \textbackslash times A}}{paragraph*.6}{}}
\@writefile{toc}{\contentsline {paragraph}{\nonumberline B. Prove that \(A^T*A\) is always symmetric.}{8}{paragraph*.8}\protected@file@percent }
\newlabel{b.-prove-that-ata-is-always-symmetric.}{{}{8}{\texorpdfstring {B. Prove that \(A^T*A\) is always symmetric.}{B. Prove that A\^{}T*A is always symmetric.}}{paragraph*.8}{}}
\@writefile{toc}{\contentsline {paragraph}{\nonumberline C. Prove that \(det(A^T \times A)\) is non-negative}{9}{paragraph*.10}\protected@file@percent }
\newlabel{c.-prove-that-detat-times-a-is-non-negative}{{}{9}{\texorpdfstring {C. Prove that \(det(A^T \times A)\) is non-negative}{C. Prove that det(A\^{}T \textbackslash times A) is non-negative}}{paragraph*.10}{}}
\@writefile{toc}{\contentsline {paragraph}{\nonumberline D. Singular Value Decomposition (SVD) and Image Compression: Write an R function that performs Singular Value Decomposition (SVD) on a grayscale image (which can be represented as a matrix). Use this decomposition to compress the image by keeping only the top k singular values and their corresponding vectors. Demonstrate the effect of different values of k on the compressed image's quality.}{10}{paragraph*.12}\protected@file@percent }
\newlabel{d.-singular-value-decomposition-svd-and-image-compression-write-an-r-function-that-performs-singular-value-decomposition-svd-on-a-grayscale-image-which-can-be-represented-as-a-matrix.-use-this-decomposition-to-compress-the-image-by-keeping-only-the-top-k-singular-values-and-their-corresponding-vectors.-demonstrate-the-effect-of-different-values-of-k-on-the-compressed-images-quality.}{{}{10}{D. Singular Value Decomposition (SVD) and Image Compression: Write an R function that performs Singular Value Decomposition (SVD) on a grayscale image (which can be represented as a matrix). Use this decomposition to compress the image by keeping only the top k singular values and their corresponding vectors. Demonstrate the effect of different values of k on the compressed image's quality}{paragraph*.12}{}}
\gdef \@abspage@last{12}
